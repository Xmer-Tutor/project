{"version":3,"sources":["images/logo.jpeg","Login.jsx","auth.js","Header.jsx","Dashboard.jsx","MyLearning.jsx","CourseList.jsx","Cart.jsx","App.jsx","services.js","serviceWorker.js","index.js"],"names":["module","exports","LoginPanel","loginUser","user","useState","username","setUsername","redirect","setRedirect","error","setError","to","push","className","value","type","onChange","target","disabled","onClick","toLowerCase","match","auth","then","catch","data","Header","logout","isLoggedIn","border","src","require","alt","width","height","Dashboard","rows","courses","map","idx","imgUrl","id","key","MyLearning","items","videos","reduce","list","selected","filter","indexOf","length","title","frameborder","allow","allowfullscreen","CourseList","addToCart","courseType","sort","setSort","a","b","price","course","isDisabled","description","Cart","cartItems","checkout","removeFromCart","cartRows","App","login","setCourses","cart","setCart","purchased","setPurchased","useEffect","fetch","method","headers","Headers","Promise","reject","code","response","ok","json","result","onLoginSuccess","onCourseFetchSuccess","body","JSON","stringify","fetchLogin","fetchAddToCart","routes","exact","path","Login","render","typeIndex","params","item","fetchRemoveFromCart","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.28c3727e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b297c66f.jpeg\";","import React, { useState } from 'react';\nimport auth from './auth';\nimport { Redirect } from 'react-router-dom';\nimport './login.css';\n\nconst LoginPanel = ({ loginUser, user }) => {   \n    const [ username, setUsername ]  = useState(user.username);\n    const [ redirect, setRedirect ] = useState();\n    const [ error, setError ] = useState('');\n\n    const changeUsername = ({ target: { value }}) => setUsername(value);\n    const login = () => {\n        if(auth(username)) {\n            return loginUser(username)\n                .then(setRedirect)\n                .catch(({ data }) => setError(data))\n        }\n\n        setError('Invalid Username');\n    };\n\n    if(redirect) {\n        return (\n            <Redirect to={redirect} push />\n        )\n    }\n\n    return (\n        <div className=\"login-panel\"> \n            {error && (\n                <div className='error'>\n                    {error}\n                </div>\n            )}\n            <div>\n                <span>Login</span>\n                <input\n                    value={username}\n                    type='text'\n                    onChange={changeUsername}\n                />\n                <button\n                    disabled={!username}\n                    onClick={login}\n                >\n                    Login\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginPanel;","export default (username) => {\n    if(!username) {\n      return false;\n    }\n    if(username.toLowerCase() === 'dog') {\n      return false;\n    }\n    if(! username.match(/^[A-Za-z0-9_-]{2,26}$/)) {\n      return false;\n    }\n    return true;\n};","import React from 'react';\nimport './header.css';\nimport { Link } from 'react-router-dom';\n\nconst Header = ({ user, logout }) => {\n    const isLoggedIn = user.username;\n\n    return (\n        <div className=\"Application-header\">\n            <div>\n                <Link\n                    to='/'\n                >\n                    <img className=\"company-logo\" border=\"0\" src={require('./images/logo.jpeg')} alt=\"logo\" width=\"40\" height=\"40\"/>\n                </Link>\n                <h1 className=\"company-name\">Tek Learning</h1>\n            </div>\n\n            {isLoggedIn && (\n                <div>\n                    <Link\n                        to='/myLearning'\n                    >\n                        <h2>\n                            My Learning\n                        </h2>\n                    </Link>\n                    <Link\n                        to='/cart'\n                    >\n                        <h2>\n                            Cart\n                        </h2>\n                    </Link>\n                    <h2>\n                        {user.username}\n                    </h2>\n                    <Link\n                        onClick={logout}\n                        to='/'\n                    >\n                        <button>\n                            Logout\n                        </button>\n                    </Link>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './dashboard.css';\n\nconst Dashboard = ({ courses: courseList }) => {\n    const rows = courseList.map(({ type, courses }, idx) => {\n        const imgUrl = `https://img.youtube.com/vi/${courses[0].id}/0.jpg`;\n\n        return (\n            <Link\n                key={type}\n                className='courseType'\n                to={`/courseType/${idx}`}\n            >\n                <img\n                    alt='thumbnail'\n                    src={imgUrl}\n                />\n\n                <h3>\n                    {type}\n                </h3>\n            </Link>\n        )\n    });\n\n    return (\n        <div className='dashboard'>\n            {rows}\n        </div>\n    )\n}\n\nexport default Dashboard;","import React from 'react';\n\nconst MyLearning = ({ courses, items }) => {\n    const videos = courses.reduce((list, type) => {\n        const selected = type.courses.filter(({ id }) => items.indexOf(id) >= 0);\n\n        if(selected.length === 0) {\n            return list;\n        }\n\n        return [...list, {\n            type: type.type,\n            courses: selected\n        }];\n    }, [])\n    .map(({ type, courses }) => (\n        <div className='type' key={type}>\n            <h3>{type}</h3>\n            {courses.map(({id, title}) => (\n                <div className='row' key={id}>\n                    <div>\n                        {title}\n                    </div>\n                    <iframe\n                        title={title}\n                        width=\"576\"\n                        height=\"317\"\n                        src={`https://www.youtube.com/embed/${id}`}\n                        frameborder=\"0\"\n                        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                        allowfullscreen\n                    />\n                </div>\n            ))}\n        </div>\n    ));\n\n    return (\n        <div className='cart'>\n            <h1>\n                My Learning\n            </h1>\n            <div className='videos'>\n                {videos}\n            </div>\n        </div>\n    )\n}\n\nexport default MyLearning;","import React, { useState } from 'react';\nimport './courseList.css';\n\nconst CourseList = ({ addToCart, courseType, disabled }) => {\n    const [ sort, setSort ] = useState(1);\n\n    const rows = courseType ? courseType.courses\n        .sort((a, b) => {\n            const { price: aPrice } = a;\n            const { price: bPrice } = b;\n\n            return (aPrice - bPrice) * sort;\n        })\n        .map(course => {\n            const imgUrl = `https://img.youtube.com/vi/${course.id}/0.jpg`;\n            const isDisabled = disabled.indexOf(course.id) >= 0;\n\n            return (\n                <div\n                    key={course.id}\n                    className='course'\n                >\n                    <img\n                        alt='thumbnail'\n                        src={imgUrl}\n                    />\n\n                    <h3>\n                        {course.title}\n                    </h3>\n                    <div>\n                        {course.description}\n                    </div>\n                    <div>\n                        Price: ${course.price}\n                    </div>\n                    {!isDisabled ? (\n                        <button\n                            onClick={() => {addToCart(course.id)}}\n                        >\n                            Add to Cart\n                        </button>\n                    ) : (\n                        <div>\n                            Already in Cart / Purchased\n                        </div>\n                    )}\n                </div>\n            )\n        }) : [];\n\n    return (\n        <div className='courseType'>\n            <h1>\n                { courseType && courseType.type } Courses\n            </h1>\n            <select onChange={({ target }) => setSort(target.value)}>\n                <option\n                    value={1}\n                >\n                    Sort by Price: Low to High\n                </option>\n                <option\n                    value={-1}\n                >\n                    Sort by Price: High to Low\n                </option>\n            </select>\n            <div className='courseRows'>\n                {rows}\n            </div>\n        </div>\n    )\n}\n\nexport default CourseList;","import React from 'react';\nimport './cart.css';\n\nconst Cart = ({ cartItems, checkout, courses, removeFromCart }) => {\n    const cartRows = courses.reduce((list, type) => {\n        const selected = type.courses.filter(({ id }) => cartItems.indexOf(id) >= 0);\n\n        if(selected.length === 0) {\n            return list;\n        }\n\n        return [...list, {\n            type: type.type,\n            courses: selected\n        }];\n    }, [])\n    .map(({ type, courses }) => (\n        <div className='type' key={type}>\n            <h3>{type}</h3>\n            {courses.map(({id, title, price}) => (\n                <div className='row' key={id}>\n                    <div>\n                        {title}\n                    </div>\n                    <div>\n                        ${price}\n                    </div>\n                    <button\n                        onClick={() => removeFromCart(id)}\n                    >\n                        Remove from cart\n                    </button>\n                </div>\n            ))}\n        </div>\n    ));\n\n    return (\n        <div className='cart'>\n            <h1>\n                My Cart\n            </h1>\n\n            {cartRows}\n\n            <div className='checkout'>\n                <button\n                    onClick={checkout}\n                >\n                    Checkout\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Cart;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport './App.css';\nimport Login from './Login';\nimport Header from './Header';\nimport Dashboard from './Dashboard';\nimport MyLearning from './MyLearning';\nimport CourseList from './CourseList';\n\nimport {\n    fetchIsLoggedIn,\n    fetchLogin,\n    fetchLogout,\n\n    fetchCourses,\n\n    fetchAddToCart,\n    fetchRemoveFromCart,\n    fetchCheckout\n} from './services';\nimport Cart from './Cart';\n\nconst App = () => {\n    const [ username, setUsername ] = useState('');\n    const [ isLoggedIn, login ] = useState(false);\n    const [ courses, setCourses ] = useState([]);\n    const [ cart, setCart ] = useState([]);\n    const [ purchased, setPurchased ] = useState([]);\n    \n    const user = {\n        username,\n        cart,\n        purchased\n    };\n\n    useEffect(() => {\n        fetchIsLoggedIn()\n            .then(onLoginSuccess);\n\n        fetchCourses()\n            .then(onCourseFetchSuccess);\n    }, [])\n\n    const onLoginSuccess = ({ data }) => {\n        setUsername(data.username);\n        login(true);\n        setCart(data.cart);\n        setPurchased(data.purchased);\n\n        return '/';\n    }\n\n    const onCourseFetchSuccess = ({ data }) => setCourses(data);\n\n    const loginUser = username => fetchLogin(username).then(onLoginSuccess);\n    \n    const logout = () => fetchLogout().then(() => {\n        setUsername('');\n        login(false);\n        setCart([]);\n        return '/';\n    });\n\n    const addToCart = id => {\n        setCart([...cart, id]);\n        fetchAddToCart(id);\n    };\n\n    const removeFromCart = id => {\n        setCart(cart.filter(item => item !== id));\n        fetchRemoveFromCart(id);\n    }\n\n    const checkout = () => {\n        fetchCheckout();\n        setPurchased([...purchased, ...cart]);\n        setCart([]);\n    }\n\n    const routes = [(\n        <Route\n            exact\n            key='login'\n            path='/login'\n        >\n            <Login\n                loginUser={loginUser}\n                user={user}\n            />\n        </Route>\n    )]\n\n    if(isLoggedIn) {\n        routes.push(\n            (\n                <Route\n                    exact\n                    key='courseType'\n                    path='/courseType/:typeIndex'\n                    render={({ match }) => {\n                        const typeIndex = match.params.typeIndex;\n                        const courseType = courses[typeIndex];\n                        if(!courseType) {\n                            return;\n                        }\n\n                        return (\n                            <CourseList\n                                addToCart={addToCart}\n                                courseType={courseType}\n                                disabled={[\n                                    ...cart,\n                                    ...purchased\n                                ]}\n                            />\n                        )\n                    }}\n                />\n            ),\n            (\n                <Route\n                    exact\n                    key='myLearning'\n                    path='/myLearning'\n                >\n                    <MyLearning\n                        courses={courses}\n                        items={purchased}\n                    />\n                </Route>\n            ),\n            (\n                <Route\n                    exact\n                    key='cart'\n                    path='/cart'\n                >\n                    <Cart\n                        cartItems={cart}\n                        checkout={checkout}\n                        courses={courses}\n                        removeFromCart={removeFromCart}\n                    />\n                </Route>\n            ),\n            (\n                <Route\n                    key='dashboard'\n                    path='/'\n                >\n                    <Dashboard courses={ courses } />\n                </Route>\n            ),\n        )\n    }\n\n    routes.push(\n        <Route\n            path='/'\n            key='catchall'\n        >\n            <Login\n                loginUser={loginUser}\n                user={user}\n            />\n        </Route>\n    )\n\n    return (\n        <Router>\n            <Header user={user} logout={logout} />\n            <Switch>\n                {routes}\n            </Switch>\n        </Router>\n    )\n}\n\nexport default App;","export const fetchIsLoggedIn = () => {\n\t\treturn fetch('/session', {\n\t\t\tmethod: 'GET',\n\t\t\theaders: new Headers({\n\t\t\t\t'content-type': 'application/json',\n\t\t\t})\n\t\t})\n\t\t.catch( () => {\n\t\t\treturn Promise.reject({code: 'No Session'});\n\t\t})\n\t\t.then( (response) => {\n\t\t\t \n\t\t\tif(!response.ok) {\n\t\t\t\treturn response.json().then( result => Promise.reject(result) );\n\t\t\t}\n\t\t\treturn response.json();\n\t\t});\n};\n\nexport const fetchLogin = (username) => {\n\t\treturn fetch('/session', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: new Headers({\n\t\t\t\t'content-type': 'application/json',\n\t\t\t}),\n\t\t\tbody: JSON.stringify({ username }),\n\t\t})\n\t\t.catch( () => {\n\t\t\treturn Promise.reject({code: 'network-error'});\n\t\t})\n\t\t.then( (response) => {\n\t\t\t \n\t\t\tif(!response.ok) {\n\t\t\t\treturn response.json().then( result => Promise.reject(result) );\n\t\t\t}\n\t\t\treturn response.json();\n\t\t});\n};\n\nexport const fetchLogout = () => {\n\t\treturn fetch('/session', {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: new Headers({\n\t\t\t\t'content-type': 'application/json',\n\t\t\t})\n\t\t})\n\t\t.catch( () => {\n\t\t\treturn Promise.reject({code: 'network-error'});\n\t\t})\n\t\t.then( (response) => {\n\t\t\t \n\t\t\tif(!response.ok) {\n\t\t\t\treturn response.json().then( result => Promise.reject(result) );\n\t\t\t}\n\t\t\treturn;\n\t\t});\n};\n\nexport const fetchCourses = () => {\n\t\treturn fetch('/courses', {\n\t\t\tmethod: 'GET',\n\t\t\theaders: new Headers({\n\t\t\t\t'content-type': 'application/json',\n\t\t\t})\n\t\t})\n\t\t.catch( () => {\n\t\t\treturn Promise.reject({code: 'network-error'});\n\t\t})\n\t\t.then( (response) => {\n\t\t\t \n\t\t\tif(!response.ok) {\n\t\t\t\treturn response.json().then( result => Promise.reject(result) );\n\t\t\t}\n\t\t\treturn response.json();\n\t\t});\n}\n\nexport const fetchAddToCart = id => {\n\treturn fetch(`/cartApi/${id}`, {\n        method: 'PUT',\n        headers: new Headers({\n            'content-type': 'application/json',\n        })\n    })\n    .catch( () => {\n        return Promise.reject({code: 'network-error'});\n    })\n    .then( (response) => {\n            \n        if(!response.ok) {\n            return response.json().then( result => Promise.reject(result) );\n        }\n        return;\n    });\n}\n\nexport const fetchRemoveFromCart = id => {\n\treturn fetch(`/cartApi/${id}`, {\n        method: 'DELETE',\n        headers: new Headers({\n            'content-type': 'application/json',\n        })\n    })\n    .catch( () => {\n        return Promise.reject({code: 'network-error'});\n    })\n    .then( (response) => {\n            \n        if(!response.ok) {\n            return response.json().then( result => Promise.reject(result) );\n        }\n        return;\n    });\n}\n\nexport const fetchCheckout = () => {\n\treturn fetch('/cartApi/checkout', {\n        method: 'GET',\n        headers: new Headers({\n            'content-type': 'application/json',\n        })\n    })\n    .catch( () => {\n        return Promise.reject({code: 'network-error'});\n    })\n    .then( (response) => {\n            \n        if(!response.ok) {\n            return response.json().then( result => Promise.reject(result) );\n        }\n        return response.json();\n    });\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}